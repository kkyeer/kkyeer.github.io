# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: install
      run: yarn install
    - name: build blog
      run: yarn build
    - name: GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSHKEY }}
        name: id_rsa # optional
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Compress
      run: tar Jcf /tmp/blog.tar.xz ./public
    - name: upload
      run: node upload.js
    
    - name: Install ngmng SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.NGMNG_SSH_KEY }}
        name: id_rsa # optional
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Deploy
      env:
        HOST: www.tpfuture.top
        USER: ngmng
      run: tar -xf /tmp/blog.tar.xz -C /tmp/&&rm -rf /home/ngmng/data/dist/&&ls -al /tmp&&ls -al /home/ngmng/data/&&mv /tmp/public/ /home/ngmng/data/dist/&&ls -al /home/ngmng/data/
    
