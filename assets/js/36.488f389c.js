(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{472:function(s,e,a){"use strict";a.r(e);var t=a(2),n=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"一次k8s容器内存oom-kill问题研究"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一次k8s容器内存oom-kill问题研究"}},[s._v("#")]),s._v(" 一次k8s容器内存oom-kill问题研究")]),s._v(" "),e("h2",{attrs:{id:"问题现象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题现象"}},[s._v("#")]),s._v(" 问题现象")]),s._v(" "),e("p",[s._v("公司最近逐步推进JRE8升级到JRE17，在解决了升级初期的一些库升级、兼容问题后，大部分应用容器趋于稳定。\n随着升级的服务越来越多，最近发现部分升级JRE17服务的容器有零星的注册中心健康检查失败报错，涉及到多个服务的多个节点，虽然在"),e("strong",[s._v("报错一次后恢复正常")]),s._v("，但是这个现象是以前这些服务从来没有出现过的，基于不放过任何一个疑点的原则，有必要调查一下原因。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2025")]),s._v("-05-28 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":01:28.330\n标题:断开连接"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("异常"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n应用:xxx "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default:-1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n实例:10.100.1.1:8080\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"初步定位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初步定位"}},[s._v("#")]),s._v(" 初步定位")]),s._v(" "),e("ol",[e("li",[s._v("最初的报错是注册中心发出，查看注册中心的事件日志确认，报错是因为注册中心调用容器的"),e("code",[s._v("/actuator/health")]),s._v("接口时，http连接异常断开")]),s._v(" "),e("li",[s._v("一般来说，http连接异常断开有几种可能\n"),e("ul",[e("li",[s._v("网络异常：丢包，延迟，阻塞")]),s._v(" "),e("li",[s._v("调用方超时主动断开：连接超时、读超时")]),s._v(" "),e("li",[s._v("被调用方响应性能异常：建连失败、响应超时、tcp reset")])])]),s._v(" "),e("li",[s._v("排查异常容器的核心指标，主要是worker线程数量，内网指标tcp丢包率等，排除了上述常见可能性后，再查看容器的事件日志，发现问题容器都有被k8s重启的相关事件，且时间点与注册中心异常告警一致，初步认定"),e("strong",[s._v("容器被k8s重启是导致注册中心告警的原因")])]),s._v(" "),e("li",[s._v("排查k8s日志，发现对应时间点，容器进程内存占用超过了k8s配置文件对requests.limit的限制，最终导致k8s强制关闭容器")]),s._v(" "),e("li",[s._v("排查容器内存指标，能看到容器的物理内存在30%~40%左右，但是容器内存持续保持在100%接近1分钟，带来了几个问题")])]),s._v(" "),e("p",[s._v("问题1: 物理内存和容器内存为什么差距这么大？\n问题2: 容器内存具体是什么在占用？")]),s._v(" "),e("h2",{attrs:{id:"内存统计知识补全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内存统计知识补全"}},[s._v("#")]),s._v(" 内存统计知识补全")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://help.aliyun.com/zh/arms/application-monitoring/developer-reference/memory-metrics",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考资料:常用的内存查询命令/指标的含义是什么_应用实时监控服务(ARMS)-阿里云帮助中心"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/36a1df62cda7",target:"_blank",rel:"noopener noreferrer"}},[s._v("容器内存监控，是看rss还是wss?"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://qingwave.github.io/container-memory/",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考资料：容器内存分析"),e("OutboundLink")],1)])]),s._v(" "),e("h3",{attrs:{id:"linux系统内存分布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux系统内存分布"}},[s._v("#")]),s._v(" Linux系统内存分布")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/kkyeer/picbed/linux_memory2.svg",alt:"linux_memory2"}})]),s._v(" "),e("p",[s._v("一般使用free命令来查看系统整体的内存占用")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mh")]),s._v("                                                                                                                                                \n               total        used        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v("      shared  buff/cache    available                                                                    \nMem:            31Gi        15Gi       235Mi       194Mi        15Gi        15Gi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ol",[e("li",[s._v("total：系统物理内存，在启动时会被启动过程，kdump等组件用掉一部分，剩下的是内核和应用程序可以使用的内存，也是free命令中输出的total字段，比物理内存略小一些")]),s._v(" "),e("li",[s._v("free：完全未分配的内存")]),s._v(" "),e("li",[s._v("buff/cache：由系统管理的缓存")]),s._v(" "),e("li",[s._v("used：total - free - buffers - cache")]),s._v(" "),e("li",[s._v("shared：Shmem共享内存页（对应共享匿名映射、tmpfs、memfd等场景），也会算到cache里")])]),s._v(" "),e("p",[s._v("从第2点可以推断出：total = used + buff/cache + free")]),s._v(" "),e("p",[s._v("其中free很好理解，就是剩余未分配的物理内存，used是减出来的，所以关键是理解buffers和cache内存。")]),s._v(" "),e("h4",{attrs:{id:"关于buffers-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于buffers-cache"}},[s._v("#")]),s._v(" 关于buffers/cache")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/645904515",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考资料"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nbuffers\n      Memory used by kernel buffers "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Buffers "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /proc/meminfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ncache  Memory used by the page cache and slabs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Cached and SReclaimable "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /proc/meminfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nbuff/cache\n      Sum of buffers and cache\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("可以看出")]),s._v(" "),e("ul",[e("li",[s._v("buffers:内核缓冲区用到的内存【Memory used by kernel buffers (Buffers in /proc/meminfo)】")]),s._v(" "),e("li",[s._v("cache:PageCache和 slab【Memory used by the page cache and slabs (Cached and SReclaimable in /proc/meminfo)】")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" proc\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  Buffers %lu\n    Relatively temporary storage "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" raw disk blocks that shouldn"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t get tremendously large (20 MB or so).\n  Cached %lu\n    In-memory cache for files read from the disk (the page cache).  Doesn'")]),s._v("t include SwapCached.\n  SReclaimable %lu "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("since Linux "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.6")]),s._v(".19"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    Part of Slab, that might be reclaimed, such as caches.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("从下面的图片可以看出，buffer位于相对底层，是文件系统和物理磁盘（块设备）之间的缓冲区，而PageCache是系统内核和文件系统之间的缓冲区。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/kkyeer/picbed/20250612111718.png",alt:"20250612111718"}})]),s._v(" "),e("p",[s._v("另外，linux内核使用 Slab 机制，管理文件系统的目录项和索引节点的缓存。Slab 包括两部分，其中的可回收部分，是指可以被回收的内核内存，包括目录项（dentry） 和索引节点（ inode ）的缓存等，用 SReclaimable 记录；而不可回收部分，用 SUnreclaim 记录。")]),s._v(" "),e("h5",{attrs:{id:"系统cache-buffer回收策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系统cache-buffer回收策略"}},[s._v("#")]),s._v(" 系统Cache/Buffer回收策略")]),s._v(" "),e("ol",[e("li",[s._v("系统内存不足时，会尝试异步回收cache>同步回收cache，如果仍旧不足，触发oom")]),s._v(" "),e("li",[s._v("可以通过写入"),e("code",[s._v("/proc/sys/vm/drop_caches")]),s._v("文件来触发系统回收，其中\n"),e("ol",[e("li",[e("code",[s._v("echo 1 > /proc/sys/vm/drop_caches")]),s._v("：释放Cache的干净页")]),s._v(" "),e("li",[e("code",[s._v("echo 2 > /proc/sys/vm/drop_caches")]),s._v("：释放slab")]),s._v(" "),e("li",[e("code",[s._v("echo 1 > /proc/sys/vm/drop_caches")]),s._v("：释放Cache和slab")])])]),s._v(" "),e("li",[s._v("如果想回收Cache的脏页，需要先执行sync，写入磁盘后变为干净页才可以回收")])]),s._v(" "),e("h3",{attrs:{id:"进程内存构成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进程内存构成"}},[s._v("#")]),s._v(" 进程内存构成")]),s._v(" "),e("p",[s._v("对于一个进程来说，内存整体可以分为3部分")]),s._v(" "),e("ol",[e("li",[s._v("进程独占的内存，对应")])])])}),[],!1,null,null,null);e.default=n.exports}}]);