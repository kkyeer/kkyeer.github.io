(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{515:function(s,a,t){"use strict";t.r(a);var n=t(2),r=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"string到底相不相等-string初始化及string-intern-方法浅析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string到底相不相等-string初始化及string-intern-方法浅析"}},[s._v("#")]),s._v(" String到底相不相等？String初始化及String.intern()方法浅析")]),s._v(" "),a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[s._v("#")]),s._v(" 引言")]),s._v(" "),a("p",[s._v("在各种面试题中经常见到类似下述的面试题")]),s._v(" "),a("p",[s._v("写出main方法的打印结果")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"111"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("答案为:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("false\ntrue\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\ntrue\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("此题要求对String类的引用有相关了解，提炼相关的要点如下")]),s._v(" "),a("h2",{attrs:{id:"要点列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#要点列表"}},[s._v("#")]),s._v(" 要点列表")]),s._v(" "),a("ol",[a("li",[s._v("两个对象obj1和obj2，当且仅当obj1与obj2指向相同的引用(内存地址，对象地址)时，ojb1==obj2返回true，其他返回false")]),s._v(" "),a("li",[s._v('String初始化时，若采用String s = "1";这种字面量直接赋值的形式，则过程为：\n判断字符串常量池中是否有值与字面量相同的引用，有的话s指向这个引用指向的对象，否则在堆上新建值为字面量的String对象，s指向新建的对象,并在字符串常量池中存储对应的引用')]),s._v(" "),a("li",[s._v('String初始化时，若采用String s = new String("1");这种new对象的形式，或者使用其他带参构造器，则过程为：\n在堆上新建字符串实例，值为相关值，s直接指向堆上新增的这个对象')]),s._v(" "),a("li",[s._v('String s = new String("1") + new String("1")等同于String s = new StringBuilder().append("1").append("1").toString();由于StringBuilder的toString方法也是调用的String的带参构造方法，\n因此在引用处理时，结果与3相同')]),s._v(" "),a("li",[s._v("String类的intern()方法执行过程为:检查字符串常量区是否有相同值(hash)的引用，有的话返回此引用，否则将调用者放入字符串常量区，并返回调用者的引用")])]),s._v(" "),a("h2",{attrs:{id:"实际代码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实际代码分析"}},[s._v("#")]),s._v(" 实际代码分析")]),s._v(" "),a("p",[s._v("如下为上述代码及每一行的分析")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        上面这段代码，在运行时会在堆上创建对象"1"并在字符串常量池中创建对应的引用，\n        同时由于字符串常量池中没有值为"111"的对象，因此会在堆上创建一个值为"111"的对象，\n        s1指向刚创建的这个"111"对象，但不会在常量池中新创建值为"111"的引用，因此常量池中仍旧\n        没有值为"111"的对象\n\n                                   ↓↓↓↓↓↓↓↓内存状态↓↓↓↓↓↓↓↓↓\n        --------------------------------------堆--------------------------------------------\n        addr1("1")\n        addr2("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------字符串常量池---------------------------------------\n        addr1("1")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------------变量-----------------------------------------\n        s1 -> addr2\n        ------------------------------------------------------------------------------------\n')])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        上面这段代码，在运行时会在堆上创建对象"11"并在字符串常量池中创建对应的引用，\n        同时由于字符串常量池中仍旧没有值为"111"的对象，因此会在堆上创建一个值为"111"的对象，\n        s2指向刚创建的这个"111"对象，\n        注意，此"111"对象地址与s1不同，此时在堆上存在两个值都为"111"的String对象\n\n                                   ↓↓↓↓↓↓↓↓内存状态↓↓↓↓↓↓↓↓↓\n        --------------------------------------堆--------------------------------------------\n        addr1("1")\n        addr2("111")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------字符串常量池---------------------------------------\n        addr1("1")\n        addr3("11")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------------变量-----------------------------------------\n        s1 -> addr2\n        s2 -> addr4\n        ------------------------------------------------------------------------------------\n')])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        根据上面的运行过程可知，s1和s2分别指向堆上两个对象，只是堆上的对象恰巧值均为"111",\n        因此打印false\n     */\n    s2.intern();\n    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        根据JDK7以后的实现，上面这句代码会检查字符串常量区，此时字符串常量区中没有值为"111"\n        的引用，因此，会将s2的引用复制到字符串常量区\n\n                                   ↓↓↓↓↓↓↓↓内存状态↓↓↓↓↓↓↓↓↓\n        --------------------------------------堆--------------------------------------------\n        addr1("1")\n        addr2("111")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------字符串常量池---------------------------------------\n        addr1("1")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------------变量-----------------------------------------\n        s1 -> addr2\n        s2 -> addr4\n        ------------------------------------------------------------------------------------\n     */\n')])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"111"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        执行了上述intern()过程后，字符串常量区中已有值为"111"的引用，根据实现，s3赋值为常量\n        区中值为"111"对应的引用也就是s2指向的堆上那个对象的地址\n\n                                   ↓↓↓↓↓↓↓↓内存状态↓↓↓↓↓↓↓↓↓\n        --------------------------------------堆--------------------------------------------\n        addr1("1")\n        addr2("111")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------字符串常量池---------------------------------------\n        addr1("1")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------------变量-----------------------------------------\n        s1 -> addr2\n        s2 -> addr4\n        s3 -> addr4\n        ------------------------------------------------------------------------------------\n     */\n')])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        s3和s2指向相同的堆上的对象，因此结果为true\n     */\n")])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        因为字符串常量区中已有值为"111"的引用，因此此方法不会对字符串常量区中的值产生影响，\n        但因为inter()方法返回的是字符串常量区中的引用，因此s4指向s2对应的对象\n\n                                   ↓↓↓↓↓↓↓↓内存状态↓↓↓↓↓↓↓↓↓\n        --------------------------------------堆--------------------------------------------\n        addr1("1")\n        addr2("111")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------字符串常量池---------------------------------------\n        addr1("1")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------------变量-----------------------------------------\n        s1 -> addr2\n        s2 -> addr4\n        s3 -> addr4\n        s4 -> addr4\n        ------------------------------------------------------------------------------------\n     */\n')])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        s4和s1指向堆上的不同的对象，因此结果为false\n     */\n")])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('    /*\n                                    ↓↓↓↓↓↓↓↓解析↓↓↓↓↓↓↓↓↓\n        根据上面的内存状态可知，s6仍旧指向堆上一个新建的值为"1"的对象，\n        s6.inter()返回的是字符串常量区已有的值为"1"的对象地址，\n        s8也等于这个地址\n\n                                   ↓↓↓↓↓↓↓↓内存状态↓↓↓↓↓↓↓↓↓\n        --------------------------------------堆--------------------------------------------\n        addr1("1")\n        addr2("111")\n        addr3("11")\n        addr4("111")\n        addr5("1")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------字符串常量池---------------------------------------\n        addr1("1")\n        addr3("11")\n        addr4("111")\n        ------------------------------------------------------------------------------------\n\n        ---------------------------------------变量-----------------------------------------\n        s1 -> addr2\n        s2 -> addr4\n        s3 -> addr4\n        s4 -> addr4\n        s6 -> addr5\n        s7 -> addr1\n        s8 -> addr1\n        ------------------------------------------------------------------------------------\n\n\n     */\n')])])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("    /*\n        根据上面的内存状态可知，打印结果为：\n        false\n        false\n        true\n     */\n")])])]),a("h2",{attrs:{id:"延申"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延申"}},[s._v("#")]),s._v(" 延申")]),s._v(" "),a("ol",[a("li",[s._v("由于使用有参构造器来初始化变量时，总会在堆上新建变量，因此在极限情况下，确有可能在初始化阶段造成OOM，解决方法是尽量使用字面量初始化字符串")]),s._v(" "),a("li",[s._v("String内部字符串常量区的实现方式不同，openjdk中，实现类似HashMap，当放入过多常量时，插入与查找也会产生部分性能损耗，因此，调用String的intern()方法也要看情况确定")])])])}),[],!1,null,null,null);a.default=r.exports}}]);