(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{472:function(t,v,_){"use strict";_.r(v);var s=_(2),r=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"某服务少部分节点cpu-100-导致局部rt飙升"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#某服务少部分节点cpu-100-导致局部rt飙升"}},[t._v("#")]),t._v(" 某服务少部分节点CPU 100%，导致局部RT飙升")]),t._v(" "),v("h2",{attrs:{id:"思路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),v("ol",[v("li",[t._v("排查问题节点CPU 100%的表面原因")])]),t._v(" "),v("p",[t._v("引起节点CPU打满的原因有很多，经排查线上监控各指标情况最终确认，"),v("strong",[t._v("问题节点YGC次数和总时长大于正常节点")]),t._v("，其余指标（如FullGC，线程数等）无明显区别，因此重点分析导致YGC次数飙升的原因")]),t._v(" "),v("blockquote",[v("p",[t._v("如果从重点指标监控无法分析原因，可能需要使用火焰图等辅助工具来协助分析，此时需要根据具体的DevOps基建来具体分析")])]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("排查线上流量与前期压测流量区别")])]),t._v(" "),v("p",[t._v("因为成本和时间考量，本次压测流量采用的是手动构造方式，怀疑是否流量模型与线上有区别导致单节点出现问题")]),t._v(" "),v("p",[t._v("分析：流量模型分为3部分构成：请求参数，请求压力（QPS）,流量分布效果，分别进行分析")]),t._v(" "),v("ul",[v("li",[t._v("请求参数：经采样分析，这部分请求均匀分布，在较大的流量和负载均衡的作用下，近似认为问题节点与其他节点请求参数无明显差别")]),t._v(" "),v("li",[t._v("请求压力：通过线上监控分析可以判断，问题节点的请求压力与其他节点无明显区别")]),t._v(" "),v("li",[t._v("流量分布：考虑到手动构造流量与线上实际流量存在差距，且问题场景的并发流量较高，此场景采用的是5分钟1.2W QPS持续流量模型（除此之外还有正态分布，半正态分布等模型），与线上实际流量对比，实际流量为2WQPS持续，除限流量较压测多以外，差别不大，暂时排除")])]),t._v(" "),v("p",[t._v("怀疑有其他原因如CPU资源竞争导致问题节点性能下降，因为压榨过于极限，导致单节点出现问题，此问题仅出现一次，一直无法复现，需要继续观察")])])}),[],!1,null,null,null);v.default=r.exports}}]);